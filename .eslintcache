[{"C:\\UdemyProjects\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\UdemyProjects\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx":"4","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\store.ts":"11","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"12","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"13","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"15","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"16","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"17","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"18","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"19","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\errors\\TestError.tsx":"20","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\errors\\NotFound.tsx":"21","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\errors\\ValidationErrors.tsx":"22","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"23","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\errors\\ServerError.tsx":"24","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"25","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextArea.tsx":"26","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"27","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\form\\MySelectInput.tsx":"28","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx":"29","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\users\\LoginForm.tsx":"30","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts":"31","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts":"32","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"33","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\users\\RegisterForm.tsx":"34","C:\\WebProjects\\TravelApp\\client-app\\src\\index.tsx":"35","C:\\WebProjects\\TravelApp\\client-app\\src\\reportWebVitals.ts":"36","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\store.ts":"37","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\layout\\App.tsx":"38","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\modalStore.ts":"39","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\userStore.ts":"40","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\commonStore.ts":"41","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\layout\\NavBar.tsx":"42","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"43","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\home\\HomePage.tsx":"44","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\errors\\NotFound.tsx":"45","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\errors\\TestError.tsx":"46","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\LoginForm.tsx":"47","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\errors\\ServerError.tsx":"48","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"49","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\api\\agent.ts":"50","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"51","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\errors\\ValidationErrors.tsx":"52","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MyDateInput.tsx":"53","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"54","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MySelectInput.tsx":"55","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MyTextArea.tsx":"56","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\brandStore.ts":"57","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\dashboard\\BrandListTable.tsx":"58","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\dashboard\\BrandDashboard.tsx":"59","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\form\\BrandForm.tsx":"60","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\dashboard\\BrandHeader.tsx":"61","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\LinkButton.tsx":"62","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\dashboard\\BrandFilters.tsx":"63","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\dashboard\\UserDashboard.tsx":"64","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\dashboard\\UserHeader.tsx":"65","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\dashboard\\UserListTable.tsx":"66","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\appUserStore.ts":"67","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\form\\UserProfile.tsx":"68","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MyCheckbox.tsx":"69","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\form\\UserRegistration.tsx":"70","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\tenantStore.ts":"71","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\tenants\\dashboard\\TenantDashboard.tsx":"72","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\tenants\\dashboard\\TenantHeader.tsx":"73","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\tenants\\dashboard\\TenantListTable.tsx":"74","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\tenants\\form\\TenantForm.tsx":"75"},{"size":983,"mtime":1638800890883,"results":"76","hashOfConfig":"77"},{"size":425,"mtime":1607146204000,"results":"78","hashOfConfig":"77"},{"size":2555,"mtime":1638924050237,"results":"79","hashOfConfig":"77"},{"size":1555,"mtime":1638909193374,"results":"80","hashOfConfig":"77"},{"size":984,"mtime":1638911934018,"results":"81","hashOfConfig":"77"},{"size":830,"mtime":1638484813527,"results":"82","hashOfConfig":"77"},{"size":1386,"mtime":1638484903882,"results":"83","hashOfConfig":"77"},{"size":4436,"mtime":1638803968865,"results":"84","hashOfConfig":"77"},{"size":3030,"mtime":1638911751466,"results":"85","hashOfConfig":"77"},{"size":390,"mtime":1637685521554,"results":"86","hashOfConfig":"77"},{"size":774,"mtime":1638923778491,"results":"87","hashOfConfig":"77"},{"size":5629,"mtime":1638803277187,"results":"88","hashOfConfig":"77"},{"size":1775,"mtime":1638925083852,"results":"89","hashOfConfig":"77"},{"size":1771,"mtime":1638802651035,"results":"90","hashOfConfig":"77"},{"size":2053,"mtime":1638803164151,"results":"91","hashOfConfig":"77"},{"size":2409,"mtime":1638480833510,"results":"92","hashOfConfig":"77"},{"size":1727,"mtime":1638802747069,"results":"93","hashOfConfig":"77"},{"size":2434,"mtime":1638480886572,"results":"94","hashOfConfig":"77"},{"size":618,"mtime":1638484459130,"results":"95","hashOfConfig":"77"},{"size":2023,"mtime":1638568882123,"results":"96","hashOfConfig":"77"},{"size":572,"mtime":1638569154479,"results":"97","hashOfConfig":"77"},{"size":507,"mtime":1638932897926,"results":"98","hashOfConfig":"77"},{"size":1106,"mtime":1638910117378,"results":"99","hashOfConfig":"77"},{"size":819,"mtime":1638568355160,"results":"100","hashOfConfig":"77"},{"size":686,"mtime":1638894867578,"results":"101","hashOfConfig":"77"},{"size":687,"mtime":1638728002517,"results":"102","hashOfConfig":"77"},{"size":268,"mtime":1638728491881,"results":"103","hashOfConfig":"77"},{"size":1003,"mtime":1638728366706,"results":"104","hashOfConfig":"77"},{"size":953,"mtime":1638801075249,"results":"105","hashOfConfig":"77"},{"size":1555,"mtime":1638924459042,"results":"106","hashOfConfig":"77"},{"size":1836,"mtime":1638924643898,"results":"107","hashOfConfig":"77"},{"size":532,"mtime":1638925110758,"results":"108","hashOfConfig":"77"},{"size":530,"mtime":1638924011051,"results":"109","hashOfConfig":"77"},{"size":2171,"mtime":1638932912352,"results":"110","hashOfConfig":"77"},{"size":983,"mtime":1638800890883,"results":"111","hashOfConfig":"112"},{"size":425,"mtime":1607146204000,"results":"113","hashOfConfig":"112"},{"size":950,"mtime":1639942689354,"results":"114","hashOfConfig":"112"},{"size":3790,"mtime":1639942672162,"results":"115","hashOfConfig":"112"},{"size":532,"mtime":1638925110758,"results":"116","hashOfConfig":"112"},{"size":2338,"mtime":1639767554512,"results":"117","hashOfConfig":"112"},{"size":1225,"mtime":1639082834906,"results":"118","hashOfConfig":"112"},{"size":7781,"mtime":1639938757523,"results":"119","hashOfConfig":"112"},{"size":390,"mtime":1637685521554,"results":"120","hashOfConfig":"112"},{"size":1513,"mtime":1639772237919,"results":"121","hashOfConfig":"112"},{"size":572,"mtime":1638569154479,"results":"122","hashOfConfig":"112"},{"size":2072,"mtime":1639165022324,"results":"123","hashOfConfig":"112"},{"size":1654,"mtime":1639155225961,"results":"124","hashOfConfig":"112"},{"size":819,"mtime":1638568355160,"results":"125","hashOfConfig":"112"},{"size":530,"mtime":1638924011051,"results":"126","hashOfConfig":"112"},{"size":4165,"mtime":1639942765156,"results":"127","hashOfConfig":"112"},{"size":268,"mtime":1638728491881,"results":"128","hashOfConfig":"112"},{"size":507,"mtime":1638932897926,"results":"129","hashOfConfig":"112"},{"size":953,"mtime":1638801075249,"results":"130","hashOfConfig":"112"},{"size":1448,"mtime":1639611983956,"results":"131","hashOfConfig":"112"},{"size":1003,"mtime":1638728366706,"results":"132","hashOfConfig":"112"},{"size":1441,"mtime":1639599771512,"results":"133","hashOfConfig":"112"},{"size":4366,"mtime":1639672256471,"results":"134","hashOfConfig":"112"},{"size":4028,"mtime":1639678772307,"results":"135","hashOfConfig":"112"},{"size":875,"mtime":1639606681134,"results":"136","hashOfConfig":"112"},{"size":3358,"mtime":1639942752714,"results":"137","hashOfConfig":"112"},{"size":781,"mtime":1639606887446,"results":"138","hashOfConfig":"112"},{"size":692,"mtime":1639772209915,"results":"139","hashOfConfig":"112"},{"size":4041,"mtime":1639606771870,"results":"140","hashOfConfig":"112"},{"size":877,"mtime":1639609909170,"results":"141","hashOfConfig":"112"},{"size":803,"mtime":1639606928114,"results":"142","hashOfConfig":"112"},{"size":4398,"mtime":1639678754865,"results":"143","hashOfConfig":"112"},{"size":3903,"mtime":1639766432500,"results":"144","hashOfConfig":"112"},{"size":4227,"mtime":1639936938952,"results":"145","hashOfConfig":"112"},{"size":1162,"mtime":1639700435311,"results":"146","hashOfConfig":"112"},{"size":3865,"mtime":1639772419314,"results":"147","hashOfConfig":"112"},{"size":2947,"mtime":1639940840317,"results":"148","hashOfConfig":"112"},{"size":827,"mtime":1639775859354,"results":"149","hashOfConfig":"112"},{"size":779,"mtime":1639774514690,"results":"150","hashOfConfig":"112"},{"size":3195,"mtime":1639942373356,"results":"151","hashOfConfig":"112"},{"size":3738,"mtime":1639939035278,"results":"152","hashOfConfig":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},"148ywoa",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},"wht35x",{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"224"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"224"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"224"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"224"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"224"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"224"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"224"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"224"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"224"},"C:\\UdemyProjects\\Reactivities\\client-app\\src\\index.tsx",[],["315","316"],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\api\\agent.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\store.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\errors\\TestError.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\errors\\NotFound.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\errors\\ServerError.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextArea.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\form\\MySelectInput.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\users\\LoginForm.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\users\\RegisterForm.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\index.tsx",[],["317","318"],"C:\\WebProjects\\TravelApp\\client-app\\src\\reportWebVitals.ts",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\store.ts",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\modalStore.ts",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\userStore.ts",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\layout\\NavBar.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\errors\\NotFound.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\errors\\TestError.tsx",["319"],"\r\nimport React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = 'http://localhost:5000/api/'\r\n\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-3xl font-bold text-green-500\">\r\n                Test Errors\r\n            </h1>\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors && \r\n                <ValidationErrors errors={errors}/>\r\n            }\r\n        </>\r\n    )\r\n}","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\LoginForm.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\errors\\ServerError.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\api\\agent.ts",["320"],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],["321","322"],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MyDateInput.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MySelectInput.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MyTextArea.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\brandStore.ts",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\dashboard\\BrandListTable.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\dashboard\\BrandDashboard.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\form\\BrandForm.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\dashboard\\BrandHeader.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\LinkButton.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\brands\\dashboard\\BrandFilters.tsx",["323","324","325"],"import { Menu, Transition } from '@headlessui/react';\r\nimport { ChevronDownIcon, SearchIcon } from '@heroicons/react/outline';\r\nimport React, { Fragment } from 'react';\r\n\r\n\r\n\r\nfunction classNames(...classes: any) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function BrandHeader() {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"max-w-full mx-auto flex items-center justify-between mt-8\">\r\n            <div className='w-80 flex items-center'>\r\n                <SearchIcon className='h-7 w-7 mr-2 text-gray-400' />\r\n                <input type='text'\r\n                    className=\"bg-gray-50 text-gray-800  focus:ring-indigo-500 focus:border-indigo-500 block w-full text-sm border-none rounded-md\"\r\n                    placeholder='Search by name, email, or tag...'\r\n                />\r\n            </div>\r\n\r\n\r\n            <Menu as=\"div\" className=\"relative inline-block text-left z-10\">\r\n                <div>\r\n                    <Menu.Button className=\"inline-flex justify-center w-full rounded-md px-4 py-2 bg-gray-100 text-sm font-medium text-gray-700 hover:bg-gray-200\">\r\n                        Filters\r\n                        <ChevronDownIcon className=\"-mr-1 ml-2 h-5 w-5\" aria-hidden=\"true\" />\r\n                    </Menu.Button>\r\n                </div>\r\n\r\n                <Transition\r\n                    as={Fragment}\r\n                    enter=\"transition ease-out duration-100\"\r\n                    enterFrom=\"transform opacity-0 scale-95\"\r\n                    enterTo=\"transform opacity-100 scale-100\"\r\n                    leave=\"transition ease-in duration-75\"\r\n                    leaveFrom=\"transform opacity-100 scale-100\"\r\n                    leaveTo=\"transform opacity-0 scale-95\"\r\n                >\r\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-gray-300 ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                        <div className=\"py-1\">\r\n                            <Menu.Item>\r\n                                {({ active }) => (\r\n                                    <a\r\n\r\n                                        className={classNames(\r\n                                            active ? 'bg-gray-200 text-gray-900' : 'text-gray-700',\r\n                                            'block px-4 py-2 text-sm'\r\n                                        )}\r\n                                    >\r\n                                        Test 1\r\n                                    </a>\r\n                                )}\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                {({ active }) => (\r\n                                    <a\r\n                       \r\n                                        className={classNames(\r\n                                            active ? 'bg-gray-200 text-gray-900' : 'text-gray-700',\r\n                                            'block px-4 py-2 text-sm'\r\n                                        )}\r\n                                    >\r\n                                        Test 2\r\n                                    </a>\r\n                                )}\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                {({ active }) => (\r\n                                    <a\r\n                                 \r\n                                        className={classNames(\r\n                                            active ? 'bg-gray-200 text-gray-900' : 'text-gray-700',\r\n                                            'block px-4 py-2 text-sm'\r\n                                        )}\r\n                                    >\r\n                                        Test 3\r\n                                    </a>\r\n                                )}\r\n                            </Menu.Item>\r\n\r\n                        </div>\r\n                    </Menu.Items>\r\n                </Transition>\r\n            </Menu>\r\n\r\n\r\n        </div>\r\n    )\r\n}","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\dashboard\\UserDashboard.tsx",["326"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport AppUserStore from '../../../app/stores/appUserStore';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport UserHeader from './UserHeader';\r\nimport UserListTable from './UserListTable';\r\n\r\n\r\n\r\n\r\n\r\nexport default observer( function UserDashboard() {\r\n\r\n\r\n    const { appUserStore } = useStore();\r\n    const {loadAppUsers, appUserRegistry} = appUserStore;\r\n\r\n\r\n    useEffect(() => {\r\n      if(appUserRegistry.size <= 1) loadAppUsers();\r\n    }, [appUserRegistry.size, loadAppUsers])\r\n  \r\n  \r\n    if (appUserStore.loadingInitial) return <LoadingComponent content='Loading Users...' />\r\n\r\n    return (\r\n        <div>\r\n            <UserHeader/>\r\n            <UserListTable/>\r\n        </div>\r\n      \r\n    )\r\n})","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\dashboard\\UserHeader.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\dashboard\\UserListTable.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\appUserStore.ts",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\form\\UserProfile.tsx",["327","328"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\n\r\nimport MyCheckbox from '../../../app/common/form/MyCheckbox';\r\nimport { User } from '../../../app/models/user';\r\n\r\n\r\n\r\nexport default observer(function UserProfile() {\r\n\r\n\r\n    const history = useHistory();\r\n    const { appUserStore, userStore } = useStore();\r\n    const { loadAppUser, updateAppUser, loading, loadingInitial } = appUserStore;\r\n    const { currentUser, getCurrentUser, updateCurrentUser } = userStore; //check loading\r\n\r\n    const { id } = useParams<{ id: string }>(); //in case this is admin edit\r\n\r\n    const [userFormValues, setUserFormValues] = useState<User>({ //Local State\r\n        id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        userName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        isActive: true,\r\n    });\r\n\r\n    //gets passed to formik\r\n    const validationSchema = Yup.object({\r\n        firstName: Yup.string().required('The first name is required'),\r\n        lastName: Yup.string().required('The last name is required'),\r\n        email: Yup.string().required().email(),\r\n        phoneNumber: Yup.string().notRequired()\r\n    })\r\n\r\n    useEffect(() => { \r\n        if (id) {\r\n            loadAppUser(id).then(appUser => setUserFormValues(appUser!))\r\n        } else {\r\n\r\n            if(!currentUser){\r\n                getCurrentUser().then(userFormValues => setUserFormValues(userFormValues!))    \r\n            } else {\r\n                setUserFormValues(currentUser)\r\n            }\r\n                 \r\n        }\r\n    }, [id, getCurrentUser])\r\n\r\n\r\n\r\n\r\n    function handleFormSubmit(user: User) {\r\n        if (id) {\r\n            updateAppUser(user).then(() => history.push(`/editUser/${user.id}`))\r\n        } else {\r\n            \r\n            updateCurrentUser(user).then(() => history.push(`/editUser/`))\r\n            \r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading user...' />\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-700\">Edit Profile | {userFormValues.firstName} {userFormValues.lastName}</h1>\r\n                <p className=\"mt-1 text-sm text-gray-500\">\r\n                    Username: {userFormValues.userName}\r\n                </p>\r\n            </div>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={userFormValues}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <form onSubmit={handleSubmit} autoComplete='off' className=\"mt-6 sm:mt-5 space-y-6 sm:space-y-5\">\r\n\r\n                        {currentUser?.id != userFormValues.id && //conditionally render in jsx\r\n\r\n                            <MyCheckbox name='isActive' label='Active' />\r\n                        }\r\n\r\n                        <MyTextInput name='firstName' type='text' placeholder='First Name' />\r\n                        <MyTextInput name='lastName' type='text' placeholder='Last Name' />\r\n                        <MyTextInput name='email' type='email' placeholder='Email' />\r\n                        <MyTextInput name='phoneNumber' type='text' placeholder='Phone Number' />\r\n\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={loading}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='Submit' />\r\n\r\n                        <Button as={Link} to='/users' floated='right' type='button' content='Cancel' />\r\n\r\n                    </form>\r\n                )}\r\n\r\n            </Formik>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n})","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\common\\form\\MyCheckbox.tsx",["329","330","331"],"import { ExclamationCircleIcon } from '@heroicons/react/outline';\r\nimport { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form } from 'semantic-ui-react';\r\n\r\n\r\ninterface Props {\r\n    name: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyCheckbox(props: Props) {\r\n    const [field, meta] = useField(props.name); //the double !! casts into boolean\r\n    return (\r\n        <div className=\"relative flex items-start\">\r\n            <div className=\"flex items-center h-5\">\r\n                <input\r\n                    {...field} {...props}\r\n                    type=\"checkbox\"\r\n                    className=\"focus:ring-blue-400 h-4 w-4 text-blue-300 border-gray-400 rounded\"\r\n                    checked={field.value}\r\n                />\r\n            </div>\r\n            <div className=\"ml-3 text-sm\">\r\n                <label htmlFor=\"isActive\" className=\"font-medium text-gray-700\">\r\n                    {props.label}\r\n                </label>\r\n                <p id=\"isActive-description\" className=\"text-gray-500\">\r\n                    Uncheck to disable user access\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\users\\form\\UserRegistration.tsx",["332","333","334","335","336","337","338"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\n\r\nimport { RegisterUserFormValues } from '../../../app/models/user';\r\n\r\n\r\n\r\n\r\nexport default observer(function UserRegistration() {\r\n\r\n\r\n    const history = useHistory();\r\n    const { appUserStore } = useStore();\r\n    const { createAppUser, loading, loadingInitial } = appUserStore;\r\n   \r\n\r\n    const [newUserFormValues, setNewUserFormValues] = useState<RegisterUserFormValues>({\r\n        id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        userName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:'',\r\n        phoneNumber:'',        \r\n    });\r\n\r\n    //gets passed to formik\r\n    const validationSchema = Yup.object({\r\n        firstName: Yup.string().required('The first name is required'),\r\n        lastName: Yup.string().required('The last name is required'),\r\n        userName: Yup.string().required('The user name is required'),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n        confirmPassword: Yup.string().required()\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     if (id) loadAppUser(id).then(appUser => setAppUser(appUser!))\r\n    // }, [id, loadAppUser])\r\n\r\n\r\n\r\n\r\n    function handleFormSubmit(appUser: RegisterUserFormValues) {\r\n        createAppUser(appUser).then(() => history.push(`/users/`))\r\n    }\r\n\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-700\">User Details</h1>\r\n                <p className=\"mt-1 text-sm text-gray-500\">\r\n                    This information will be displayed publicly so be careful what you share.\r\n                </p>\r\n            </div>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={newUserFormValues}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <form onSubmit={handleSubmit} autoComplete='off' className=\"mt-6 sm:mt-5 space-y-6 sm:space-y-5\">\r\n                        <MyTextInput name='firstName' type='text' placeholder='First Name' />\r\n                        <MyTextInput name='lastName' type='text' placeholder='Last Name' />\r\n                        <MyTextInput name='userName' type='text' placeholder='Username' />\r\n                        <MyTextInput name='email' type='email' placeholder='Email' />\r\n                        <MyTextInput name='phoneNumber' type='text' placeholder='Phone Number' />\r\n                        <MyTextInput name='password' type='text' placeholder='Password' />\r\n                        <MyTextInput name='confirmPassword' type='text' placeholder='Confirm Password' />\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={loading}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='Submit' />\r\n\r\n                        <Button as={Link} to='/users' floated='right' type='button' content='Cancel' />\r\n\r\n                    </form>\r\n                )}\r\n\r\n            </Formik>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n})","C:\\WebProjects\\TravelApp\\client-app\\src\\app\\stores\\tenantStore.ts",["339","340"],"import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { SearchParams } from \"../models/searchParams\";\r\nimport { RegisterTenantFormValues, Tenant } from \"../models/tenant\";\r\n\r\n\r\nexport default class TenantStore {\r\n\r\n    tenantRegistry = new Map<string, Tenant>();\r\n    selectedTenant: Tenant | undefined = undefined;\r\n\r\n    editMode: boolean = false;\r\n    loading: boolean = false;\r\n    loadingInitial: boolean = false;\r\n\r\n\r\n    constructor() {\r\n        makeAutoObservable(this) //Mobx will do the above code by inference\r\n    }\r\n\r\n\r\n    loadTenants = async () => {\r\n        this.setLoadingInitial(true);\r\n        try {\r\n\r\n            console.log('loading tenants');\r\n            const result = await agent.Tenants.list(); \r\n            result.data.forEach(tenant => {\r\n                this.setTenant(tenant);\r\n            })\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    loadTenant = async (id: string) => {\r\n        console.log('load tenant')\r\n        let tenant = this.getTenant(id);\r\n        if(tenant) {\r\n            this.selectedTenant = tenant;\r\n            return tenant;\r\n        } \r\n        else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                const result = await agent.Tenants.details(id);\r\n                this.selectedTenant = result.data;\r\n                this.setLoadingInitial(false);\r\n                return result.data;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //computed Property\r\n    get tenantsSorted() {\r\n        return Array.from(this.tenantRegistry.values());\r\n    }\r\n\r\n    //helper methods -----------------\r\n    private getTenant = (id: string) => {\r\n        return this.tenantRegistry.get(id);\r\n    }\r\n\r\n    private setTenant = (tenant: Tenant) => { //add to registry \r\n        this.tenantRegistry.set(tenant.id, tenant);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n    //---------------------------------\r\n\r\n\r\n\r\n    \r\n    createTenant = async (tenant: Tenant) => {\r\n        this.loading = true;\r\n\r\n        try {\r\n            let response = await agent.Tenants.create(tenant);\r\n            runInAction(() => {\r\n                //tenant.id = String(response.data.id); //The GUID\r\n\r\n                tenant = response.data;\r\n                this.tenantRegistry.set(tenant.id, tenant); //add an brand to the Map Object\r\n\r\n                this.selectedTenant = tenant;\r\n                this.editMode = false;\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\tenants\\dashboard\\TenantDashboard.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\tenants\\dashboard\\TenantHeader.tsx",[],"C:\\WebProjects\\TravelApp\\client-app\\src\\features\\tenants\\dashboard\\TenantListTable.tsx",["341"],"import { observer } from 'mobx-react-lite';\r\nimport LinkButton from '../../../app/common/form/LinkButton';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\n\r\nexport default observer(function TenantListTable() {\r\n    const { tenantStore } = useStore();\r\n    const { tenantsSorted } = tenantStore;\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <table className=\"min-w-full mt-8\">\r\n                <thead className=\"bg-gray-100 text-gray-500\">\r\n                    <tr>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-4 text-left text-sm font-medium tracking-wider\"\r\n                        >\r\n                            Name\r\n                        </th>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-sm font-medium tracking-wider\"\r\n                        >\r\n                            Key\r\n                        </th>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-sm font-medium tracking-wider\"\r\n                        >\r\n                            Admin Email\r\n                        </th>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-sm font-medium tracking-wider\"\r\n                        >\r\n                            Connection String\r\n                        </th>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-sm font-medium tracking-wider\"\r\n                        >\r\n                            Active\r\n                        </th>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-sm font-medium tracking-wider\"\r\n                        >\r\n                            Validity\r\n                        </th>\r\n                \r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"bg-gray-50\">\r\n                    {tenantsSorted.map((tenant) => (\r\n                        <tr key={tenant.id} className=\"border-b border-gray-200 \">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{tenant.name}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{tenant.key}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{tenant.adminEmail}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{tenant.connectionString}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{tenant.isActive ? \"True\" : \"False\"}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{tenant.validUpto}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n})\r\n","C:\\WebProjects\\TravelApp\\client-app\\src\\features\\tenants\\form\\TenantForm.tsx",["342","343","344","345"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\n\r\nimport MyCheckbox from '../../../app/common/form/MyCheckbox';\r\nimport { User } from '../../../app/models/user';\r\nimport { Tenant } from '../../../app/models/tenant';\r\n\r\n\r\n\r\nexport default observer(function TenantForm() {\r\n\r\n\r\n    const history = useHistory();\r\n    const { tenantStore } = useStore();\r\n    const { createTenant, loadTenants, loadTenant, loading, loadingInitial, selectedTenant } = tenantStore\r\n\r\n    const { id } = useParams<{ id: string }>(); //in case this is admin edit\r\n\r\n    const [tenantFormValues, setTenantFormValues] = useState<Tenant>({ //Local State\r\n        id: '',\r\n        name: '',\r\n        key: '',\r\n        adminEmail: '',\r\n        connectionString: '',\r\n        isActive: true,\r\n        validUpto: null\r\n    });\r\n\r\n    //gets passed to formik\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('The name is required'),\r\n        key: Yup.string().required('The key is required'),\r\n        adminEmail: Yup.string().required('The admin email is required').email(),\r\n        connectionString: Yup.string().notRequired()\r\n    })\r\n\r\n    useEffect(() => { \r\n        if (id) {\r\n            loadTenant(id).then(tenant => setTenantFormValues(tenant!))\r\n        } \r\n    }, [id, loadTenant])\r\n\r\n\r\n\r\n\r\n    function handleFormSubmit(tenant: Tenant) {\r\n        // if (id) {\r\n        //     updateAppUser(user).then(() => history.push(`/editUser/${user.id}`))\r\n        // } else {\r\n            \r\n        //     updateCurrentUser(user).then(() => history.push(`/editUser/`))\r\n            \r\n        // }\r\n\r\n        createTenant(tenant).then(() => history.push(`/tenants/`))\r\n        console.log('handle submit');\r\n    }\r\n\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading user...' />\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-700\"> {id ? 'Edit Tenant' : 'Create Tenant'} </h1>\r\n\r\n            </div>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={tenantFormValues}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <form onSubmit={handleSubmit} autoComplete='off' className=\"mt-6 sm:mt-5 space-y-6 sm:space-y-5\">\r\n\r\n\r\n                        <MyTextInput name='name' type='text' placeholder='Name' />\r\n                        <MyTextInput name='key' type='text' placeholder='Key' />\r\n                        <MyTextInput name='adminEmail' type='email' placeholder='Admin Email' />\r\n                        <MyTextInput name='connectionString' type='text' placeholder='Connection String' />\r\n\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={loading}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='Submit' />\r\n\r\n                        <Button as={Link} to='/tenants' floated='right' type='button' content='Cancel' />\r\n\r\n                    </form>\r\n                )}\r\n\r\n            </Formik>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n})",{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"346","replacedBy":"350"},{"ruleId":"348","replacedBy":"351"},{"ruleId":"352","severity":1,"message":"353","line":3,"column":17,"nodeType":"354","messageId":"355","endLine":3,"endColumn":23},{"ruleId":"352","severity":1,"message":"356","line":11,"column":10,"nodeType":"354","messageId":"355","endLine":11,"endColumn":34},{"ruleId":"346","replacedBy":"357"},{"ruleId":"348","replacedBy":"358"},{"ruleId":"359","severity":1,"message":"360","line":47,"column":37,"nodeType":"361","endLine":53,"endColumn":38},{"ruleId":"359","severity":1,"message":"360","line":60,"column":37,"nodeType":"361","endLine":66,"endColumn":38},{"ruleId":"359","severity":1,"message":"360","line":73,"column":37,"nodeType":"361","endLine":79,"endColumn":38},{"ruleId":"352","severity":1,"message":"362","line":4,"column":8,"nodeType":"354","messageId":"355","endLine":4,"endColumn":20},{"ruleId":"363","severity":1,"message":"364","line":56,"column":8,"nodeType":"365","endLine":56,"endColumn":28,"suggestions":"366"},{"ruleId":"367","severity":1,"message":"368","line":91,"column":42,"nodeType":"369","messageId":"370","endLine":91,"endColumn":44},{"ruleId":"352","severity":1,"message":"371","line":1,"column":10,"nodeType":"354","messageId":"355","endLine":1,"endColumn":31},{"ruleId":"352","severity":1,"message":"372","line":4,"column":10,"nodeType":"354","messageId":"355","endLine":4,"endColumn":14},{"ruleId":"352","severity":1,"message":"373","line":13,"column":19,"nodeType":"354","messageId":"355","endLine":13,"endColumn":23},{"ruleId":"352","severity":1,"message":"374","line":2,"column":17,"nodeType":"354","messageId":"355","endLine":2,"endColumn":26},{"ruleId":"352","severity":1,"message":"375","line":3,"column":28,"nodeType":"354","messageId":"355","endLine":3,"endColumn":37},{"ruleId":"352","severity":1,"message":"353","line":4,"column":18,"nodeType":"354","messageId":"355","endLine":4,"endColumn":24},{"ruleId":"352","severity":1,"message":"376","line":4,"column":26,"nodeType":"354","messageId":"355","endLine":4,"endColumn":33},{"ruleId":"352","severity":1,"message":"377","line":7,"column":16,"nodeType":"354","messageId":"355","endLine":7,"endColumn":20},{"ruleId":"352","severity":1,"message":"372","line":8,"column":18,"nodeType":"354","messageId":"355","endLine":8,"endColumn":22},{"ruleId":"352","severity":1,"message":"378","line":25,"column":31,"nodeType":"354","messageId":"355","endLine":25,"endColumn":51},{"ruleId":"352","severity":1,"message":"379","line":3,"column":10,"nodeType":"354","messageId":"355","endLine":3,"endColumn":22},{"ruleId":"352","severity":1,"message":"356","line":4,"column":10,"nodeType":"354","messageId":"355","endLine":4,"endColumn":34},{"ruleId":"352","severity":1,"message":"380","line":2,"column":8,"nodeType":"354","messageId":"355","endLine":2,"endColumn":18},{"ruleId":"352","severity":1,"message":"381","line":11,"column":8,"nodeType":"354","messageId":"355","endLine":11,"endColumn":18},{"ruleId":"352","severity":1,"message":"382","line":12,"column":10,"nodeType":"354","messageId":"355","endLine":12,"endColumn":14},{"ruleId":"352","severity":1,"message":"383","line":22,"column":27,"nodeType":"354","messageId":"355","endLine":22,"endColumn":38},{"ruleId":"352","severity":1,"message":"384","line":22,"column":77,"nodeType":"354","messageId":"355","endLine":22,"endColumn":91},"no-native-reassign",["385"],"no-negated-in-lhs",["386"],["385"],["386"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'RegisterTenantFormValues' is defined but never used.",["385"],["386"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AppUserStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'loadAppUser'. Either include them or remove the dependency array.","ArrayExpression",["387"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ExclamationCircleIcon' is defined but never used.","'Form' is defined but never used.","'meta' is assigned a value but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'Segment' is defined but never used.","'uuid' is defined but never used.","'setNewUserFormValues' is assigned a value but never used.","'SearchParams' is defined but never used.","'LinkButton' is defined but never used.","'MyCheckbox' is defined but never used.","'User' is defined but never used.","'loadTenants' is assigned a value but never used.","'selectedTenant' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"388","fix":"389"},"Update the dependencies array to be: [id, getCurrentUser, loadAppUser, currentUser]",{"range":"390","text":"391"},[1940,1960],"[id, getCurrentUser, loadAppUser, currentUser]"]